{"version":3,"file":"ngx-bootstrap-navbar.mjs","sources":["../../../projects/ngx-bootstrap-navbar/src/lib/navbar-dynamic-expand.directive.ts","../../../projects/ngx-bootstrap-navbar/src/lib/navbar-animation.ts","../../../projects/ngx-bootstrap-navbar/src/lib/navbar-collapse.component.ts","../../../projects/ngx-bootstrap-navbar/src/lib/navbar.module.ts","../../../projects/ngx-bootstrap-navbar/src/public-api.ts","../../../projects/ngx-bootstrap-navbar/src/ngx-bootstrap-navbar.ts"],"sourcesContent":["import { Platform } from '@angular/cdk/platform';\r\nimport { ViewportRuler } from '@angular/cdk/scrolling';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport {\r\n  AfterContentInit,\r\n  Directive,\r\n  ElementRef,\r\n  NgZone,\r\n  OnDestroy,\r\n  ChangeDetectorRef,\r\n  Inject,\r\n  inject,\r\n} from '@angular/core';\r\nimport { merge, Subject } from 'rxjs';\r\nimport { distinctUntilChanged, map, takeUntil, filter } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[ngxNavbarDynamicExpand]',\r\n  host: {\r\n    class: 'navbar text-nowrap',\r\n    '[class.navbar-expand]': 'isExpanded',\r\n  },\r\n})\r\nexport class NgxNavbarDynamicExpandDirective\r\n  implements AfterContentInit, OnDestroy\r\n{\r\n  private readonly onDestroy$ = new Subject<void>();\r\n  private readonly update$ = new Subject<void>();\r\n  private readonly nativeElement =\r\n    inject<ElementRef<HTMLElement>>(ElementRef).nativeElement;\r\n  private loaded = false;\r\n  private _isExpanded = false;\r\n  get isExpanded() {\r\n    return this._isExpanded;\r\n  }\r\n\r\n  constructor(\r\n    private readonly ngZone: NgZone,\r\n    private readonly platform: Platform,\r\n    @Inject(DOCUMENT) private readonly _document: Document,\r\n    viewportRuler: ViewportRuler,\r\n    cdRef: ChangeDetectorRef\r\n  ) {\r\n    ngZone.runOutsideAngular(() => {\r\n      merge(viewportRuler.change(150), this.update$)\r\n        .pipe(\r\n          filter(\r\n            () =>\r\n              this.loaded ||\r\n              (this.loaded = checkBootstrapStylesAreLoaded(\r\n                _document,\r\n                this.nativeElement\r\n              ))\r\n          ),\r\n          map(() => {\r\n            const element = this.nativeElement;\r\n            let overflowSize;\r\n            if (this.isExpanded) {\r\n              overflowSize = element.scrollWidth - element.offsetWidth;\r\n            } else {\r\n              const clone = element.cloneNode(true) as HTMLElement;\r\n              clone.classList.add('navbar-expand');\r\n              const parent = element.parentElement;\r\n              if (parent) {\r\n                parent.appendChild(clone);\r\n                overflowSize = clone.scrollWidth - clone.offsetWidth;\r\n                parent.removeChild(clone);\r\n              }\r\n            }\r\n            return !overflowSize;\r\n          }),\r\n          distinctUntilChanged(),\r\n          takeUntil(this.onDestroy$)\r\n        )\r\n        .subscribe((isExpanded) => {\r\n          ngZone.run(() => {\r\n            this._isExpanded = isExpanded;\r\n            cdRef.markForCheck();\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (!this.platform.isBrowser) {\r\n      return;\r\n    }\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.loaded = checkBootstrapStylesAreLoaded(\r\n        this._document,\r\n        this.nativeElement\r\n      );\r\n      if (this.loaded) {\r\n        this.update$.next();\r\n      } else {\r\n        setTimeout(() => {\r\n          this.ngAfterContentInit();\r\n        }, 1000 / 60);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.update$.complete();\r\n    this.onDestroy$.next();\r\n    this.onDestroy$.complete();\r\n  }\r\n}\r\n\r\nfunction checkBootstrapStylesAreLoaded(\r\n  document: Document,\r\n  element: Element\r\n): boolean {\r\n  const documentWindow = document.defaultView || window;\r\n  const computedStyle =\r\n    documentWindow && documentWindow.getComputedStyle\r\n      ? documentWindow.getComputedStyle(element)\r\n      : false;\r\n  return computedStyle && computedStyle.whiteSpace === 'nowrap';\r\n}\r\n","import { animate, AnimationTriggerMetadata, style, transition, trigger } from '@angular/animations';\r\n/** Time and timing curve for navbar animations. */\r\nexport const NAVBAR_ANIMATION_TIMING = '300ms ease-out';\r\n\r\nexport const ngxNavbarAnimations: {\r\n  readonly navbarSlide: AnimationTriggerMetadata;\r\n} = {\r\n  navbarSlide: trigger('slideState', [\r\n    transition('false => true', [\r\n      style({\r\n        opacity: 0,\r\n        height: 0,\r\n        overflow: 'hidden'\r\n      }),\r\n      animate(\r\n        NAVBAR_ANIMATION_TIMING,\r\n        style({\r\n          opacity: 1,\r\n          height: '*'\r\n        })\r\n      )\r\n    ]),\r\n    transition('true => false', [\r\n      animate(\r\n        NAVBAR_ANIMATION_TIMING,\r\n        style({\r\n          display: 'block',\r\n          opacity: 0,\r\n          height: 0,\r\n          overflow: 'hidden'\r\n        })\r\n      )\r\n    ])\r\n  ])\r\n};\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  inject,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { ngxNavbarAnimations } from './navbar-animation';\r\n\r\n@Component({\r\n  selector: 'ngx-navbar-collapse',\r\n  template: ` <ng-content></ng-content> `,\r\n  styles: [\r\n    `\r\n      .ngx-navbar-collapse.collapsing {\r\n        height: auto;\r\n      }\r\n    `,\r\n  ],\r\n  host: {\r\n    class: 'navbar-collapse ngx-navbar-collapse',\r\n    '[@slideState]': '!isCollapsed',\r\n    '(@slideState.done)': 'done()',\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [ngxNavbarAnimations.navbarSlide],\r\n  exportAs: 'ngxNavbarCollapse',\r\n})\r\nexport class NgxNavbarCollapseComponent {\r\n  public isCollapsed = true;\r\n  private isTransitioning = false;\r\n  private readonly nativeElement =\r\n    inject<ElementRef<HTMLElement>>(ElementRef).nativeElement;\r\n\r\n  constructor() {\r\n    this.updateClasses();\r\n  }\r\n\r\n  toggle() {\r\n    this.isTransitioning = true;\r\n    this.isCollapsed = !this.isCollapsed;\r\n    this.updateClasses();\r\n  }\r\n\r\n  close() {\r\n    if (this.isCollapsed) {\r\n      return;\r\n    }\r\n    this.isTransitioning = true;\r\n    this.isCollapsed = true;\r\n    this.updateClasses();\r\n  }\r\n\r\n  open() {\r\n    if (!this.isCollapsed) {\r\n      return;\r\n    }\r\n    this.isTransitioning = true;\r\n    this.isCollapsed = false;\r\n    this.updateClasses();\r\n  }\r\n\r\n  protected done() {\r\n    this.isTransitioning = false;\r\n    this.updateClasses();\r\n  }\r\n\r\n  protected updateClasses() {\r\n    const classList = this.nativeElement.classList;\r\n    const isTransitioning = this.isTransitioning;\r\n    classList.toggle('collapse', !isTransitioning);\r\n    classList.toggle('show', !this.isCollapsed && !isTransitioning);\r\n    classList.toggle('collapsing', isTransitioning);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgxNavbarCollapseComponent } from './navbar-collapse.component';\r\nimport { NgxNavbarDynamicExpandDirective } from './navbar-dynamic-expand.directive';\r\n\r\n@NgModule({\r\n  declarations: [NgxNavbarCollapseComponent, NgxNavbarDynamicExpandDirective],\r\n  imports: [CommonModule],\r\n  exports: [NgxNavbarCollapseComponent, NgxNavbarDynamicExpandDirective]\r\n})\r\nexport class NgxNavbarModule {}\r\n","/*\r\n * Public API Surface of ngx-bootstrap-navbar\r\n */\r\n\r\nexport * from './lib/navbar-dynamic-expand.directive';\r\nexport * from './lib/navbar-collapse.component';\r\nexport * from './lib/navbar.module';\r\nexport * from './lib/navbar-animation';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;;;MAuBa,+BAA+B,CAAA;IAa1C,WACmB,CAAA,MAAc,EACd,QAAkB,EACA,SAAmB,EACtD,aAA4B,EAC5B,KAAwB,EAAA;QAJP,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;QACA,IAAS,CAAA,SAAA,GAAT,SAAS,CAAU;AAbvC,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,OAAO,EAAQ,CAAC;AACjC,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,OAAO,EAAQ,CAAC;AAC9B,QAAA,IAAA,CAAA,aAAa,GAC5B,MAAM,CAA0B,UAAU,CAAC,CAAC,aAAa,CAAC;QACpD,IAAM,CAAA,MAAA,GAAG,KAAK,CAAC;QACf,IAAW,CAAA,WAAA,GAAG,KAAK,CAAC;AAY1B,QAAA,MAAM,CAAC,iBAAiB,CAAC,MAAK;YAC5B,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC;iBAC3C,IAAI,CACH,MAAM,CACJ,MACE,IAAI,CAAC,MAAM;AACX,iBAAC,IAAI,CAAC,MAAM,GAAG,6BAA6B,CAC1C,SAAS,EACT,IAAI,CAAC,aAAa,CACnB,CAAC,CACL,EACD,GAAG,CAAC,MAAK;AACP,gBAAA,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;AACnC,gBAAA,IAAI,YAAY,CAAC;gBACjB,IAAI,IAAI,CAAC,UAAU,EAAE;oBACnB,YAAY,GAAG,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;AAC1D,iBAAA;AAAM,qBAAA;oBACL,MAAM,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAgB,CAAC;AACrD,oBAAA,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;AACrC,oBAAA,MAAM,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC;AACrC,oBAAA,IAAI,MAAM,EAAE;AACV,wBAAA,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;wBAC1B,YAAY,GAAG,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;AACrD,wBAAA,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC3B,qBAAA;AACF,iBAAA;gBACD,OAAO,CAAC,YAAY,CAAC;aACtB,CAAC,EACF,oBAAoB,EAAE,EACtB,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B;AACA,iBAAA,SAAS,CAAC,CAAC,UAAU,KAAI;AACxB,gBAAA,MAAM,CAAC,GAAG,CAAC,MAAK;AACd,oBAAA,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;oBAC9B,KAAK,CAAC,YAAY,EAAE,CAAC;AACvB,iBAAC,CAAC,CAAC;AACL,aAAC,CAAC,CAAC;AACP,SAAC,CAAC,CAAC;KACJ;AAjDD,IAAA,IAAI,UAAU,GAAA;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IAiDD,kBAAkB,GAAA;AAChB,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;YAC5B,OAAO;AACR,SAAA;AACD,QAAA,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAAK;AACjC,YAAA,IAAI,CAAC,MAAM,GAAG,6BAA6B,CACzC,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,aAAa,CACnB,CAAC;YACF,IAAI,IAAI,CAAC,MAAM,EAAE;AACf,gBAAA,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;AACrB,aAAA;AAAM,iBAAA;gBACL,UAAU,CAAC,MAAK;oBACd,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC5B,iBAAC,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;AACf,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;AACxB,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AACvB,QAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;KAC5B;;AAnFU,+BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,+BAA+B,gEAgBhC,QAAQ,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;gHAhBP,+BAA+B,EAAA,QAAA,EAAA,0BAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,qBAAA,EAAA,YAAA,EAAA,EAAA,cAAA,EAAA,oBAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAA/B,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAP3C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,0BAA0B;AACpC,oBAAA,IAAI,EAAE;AACJ,wBAAA,KAAK,EAAE,oBAAoB;AAC3B,wBAAA,uBAAuB,EAAE,YAAY;AACtC,qBAAA;AACF,iBAAA,CAAA;sGAiBiD,QAAQ,EAAA,UAAA,EAAA,CAAA;0BAArD,MAAM;2BAAC,QAAQ,CAAA;;AAsEpB,SAAS,6BAA6B,CACpC,QAAkB,EAClB,OAAgB,EAAA;AAEhB,IAAA,MAAM,cAAc,GAAG,QAAQ,CAAC,WAAW,IAAI,MAAM,CAAC;AACtD,IAAA,MAAM,aAAa,GACjB,cAAc,IAAI,cAAc,CAAC,gBAAgB;AAC/C,UAAE,cAAc,CAAC,gBAAgB,CAAC,OAAO,CAAC;UACxC,KAAK,CAAC;AACZ,IAAA,OAAO,aAAa,IAAI,aAAa,CAAC,UAAU,KAAK,QAAQ,CAAC;AAChE;;ACtHA;AACO,MAAM,uBAAuB,GAAG,iBAAiB;AAE3C,MAAA,mBAAmB,GAE5B;AACF,IAAA,WAAW,EAAE,OAAO,CAAC,YAAY,EAAE;QACjC,UAAU,CAAC,eAAe,EAAE;AAC1B,YAAA,KAAK,CAAC;AACJ,gBAAA,OAAO,EAAE,CAAC;AACV,gBAAA,MAAM,EAAE,CAAC;AACT,gBAAA,QAAQ,EAAE,QAAQ;aACnB,CAAC;AACF,YAAA,OAAO,CACL,uBAAuB,EACvB,KAAK,CAAC;AACJ,gBAAA,OAAO,EAAE,CAAC;AACV,gBAAA,MAAM,EAAE,GAAG;AACZ,aAAA,CAAC,CACH;SACF,CAAC;QACF,UAAU,CAAC,eAAe,EAAE;AAC1B,YAAA,OAAO,CACL,uBAAuB,EACvB,KAAK,CAAC;AACJ,gBAAA,OAAO,EAAE,OAAO;AAChB,gBAAA,OAAO,EAAE,CAAC;AACV,gBAAA,MAAM,EAAE,CAAC;AACT,gBAAA,QAAQ,EAAE,QAAQ;AACnB,aAAA,CAAC,CACH;SACF,CAAC;KACH,CAAC;;;MCJS,0BAA0B,CAAA;AAMrC,IAAA,WAAA,GAAA;QALO,IAAW,CAAA,WAAA,GAAG,IAAI,CAAC;QAClB,IAAe,CAAA,eAAA,GAAG,KAAK,CAAC;AACf,QAAA,IAAA,CAAA,aAAa,GAC5B,MAAM,CAA0B,UAAU,CAAC,CAAC,aAAa,CAAC;QAG1D,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAED,MAAM,GAAA;AACJ,QAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;AAC5B,QAAA,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAED,KAAK,GAAA;QACH,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,OAAO;AACR,SAAA;AACD,QAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;AAC5B,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAED,IAAI,GAAA;AACF,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,OAAO;AACR,SAAA;AACD,QAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;AAC5B,QAAA,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAES,IAAI,GAAA;AACZ,QAAA,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAES,aAAa,GAAA;AACrB,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;AAC/C,QAAA,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAC7C,SAAS,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,eAAe,CAAC,CAAC;AAC/C,QAAA,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,eAAe,CAAC,CAAC;AAChE,QAAA,SAAS,CAAC,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC;KACjD;;uHA7CU,0BAA0B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA1B,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,0BAA0B,yPAlB3B,CAA6B,2BAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,gDAAA,CAAA,EAAA,UAAA,EAe3B,CAAC,mBAAmB,CAAC,WAAW,CAAC,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FAGlC,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBApBtC,SAAS;+BACE,qBAAqB,EAAA,QAAA,EACrB,6BAA6B,EAQjC,IAAA,EAAA;AACJ,wBAAA,KAAK,EAAE,qCAAqC;AAC5C,wBAAA,eAAe,EAAE,cAAc;AAC/B,wBAAA,oBAAoB,EAAE,QAAQ;AAC/B,qBAAA,EAAA,aAAA,EACc,iBAAiB,CAAC,IAAI,EAAA,eAAA,EACpB,uBAAuB,CAAC,MAAM,EACnC,UAAA,EAAA,CAAC,mBAAmB,CAAC,WAAW,CAAC,YACnC,mBAAmB,EAAA,MAAA,EAAA,CAAA,gDAAA,CAAA,EAAA,CAAA;;;MCjBlB,eAAe,CAAA;;4GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;6GAAf,eAAe,EAAA,YAAA,EAAA,CAJX,0BAA0B,EAAE,+BAA+B,aAChE,YAAY,CAAA,EAAA,OAAA,EAAA,CACZ,0BAA0B,EAAE,+BAA+B,CAAA,EAAA,CAAA,CAAA;AAE1D,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,YAHhB,YAAY,CAAA,EAAA,CAAA,CAAA;2FAGX,eAAe,EAAA,UAAA,EAAA,CAAA;kBAL3B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE,CAAC,0BAA0B,EAAE,+BAA+B,CAAC;oBAC3E,OAAO,EAAE,CAAC,YAAY,CAAC;AACvB,oBAAA,OAAO,EAAE,CAAC,0BAA0B,EAAE,+BAA+B,CAAC;AACvE,iBAAA,CAAA;;;ACTD;;AAEG;;ACFH;;AAEG;;;;"}